<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on 老麦的书房</title><link>https://typonotes.com/categories/go/</link><description>Recent content in go on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 May 2025 17:22:21 +0800</lastBuildDate><atom:link href="https://typonotes.com/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go1.24 - 按行读取文件</title><link>https://typonotes.com/posts/2025/05/16/read-file-line-by-line-go124/</link><pubDate>Fri, 16 May 2025 17:22:21 +0800</pubDate><guid>https://typonotes.com/posts/2025/05/16/read-file-line-by-line-go124/</guid><description>Go1.24 - 按行读取文件 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/05/16/read-file-line-by-line-go124/ 在 go 1.24 中新增加了两个标准方法 - strings.Lines() 和 bytes.Lines()。 都使用 分隔符 \n 拆分对象。 都返回一个 Seq 的迭代对象。 Seq 迭代对象 Seq 迭代对象可以接受一个 回调函数 或 使用 for 循环 进行遍历。 使用 回调函数 时， 可以通过 return false 提前终止遍历。 1 2 3 4</description></item><item><title>Go 1.24 - os.Root 锁定工作目录</title><link>https://typonotes.com/posts/2025/05/16/os-root-in-go124/</link><pubDate>Fri, 16 May 2025 16:16:27 +0800</pubDate><guid>https://typonotes.com/posts/2025/05/16/os-root-in-go124/</guid><description>Go 1.24 - os.Root 锁定工作目录 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/05/16/os-root-in-go124/ os.Root 可以锁定工作目录。 使用户无法打开目录外的文件，例如 ../../../etc/passwd 。 可以算一种 安全保护 最重要的是 强制约束用户， 限制用户行为， 检查计划外的使用逻辑 。 免得和煞笔瞎掰扯， 浪费时间。 使用 root, _ := os.OpenRoot(basedir) 锁定工作目录 以后的所有操作都要基于 root.Xzzzz() 展开 root.OpenFile(path) 在</description></item><item><title>Gorm: 声明模型（1）</title><link>https://typonotes.com/posts/2025/03/17/gorm-model-declaration/</link><pubDate>Mon, 17 Mar 2025 11:37:02 +0800</pubDate><guid>https://typonotes.com/posts/2025/03/17/gorm-model-declaration/</guid><description>Gorm: 声明模型（1） 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/03/17/gorm-model-declaration/ 1. 数组字段 https://gorm.io/zh_CN/docs/models.html 如果表中有 slice 字段， 则需要使用 type 指定类型。 1 2 3 4 5 6 package dao type DemoTable struct { Users []string `gorm:&amp;#34;type:text[]&amp;#34;` // This is a slice of strings IDs []int `gorm:&amp;#34;type:int[]&amp;#34;` // This is a slice of integers } 2. 索引 https://gorm.io/zh_CN/docs/indexes.html 2.1 唯一作引 唯一索引有两种形式， uniqueIndex index:[name],unique : 自定义索引名字 1 2 3 4 5 type User struct { Name string `gorm:&amp;#34;index&amp;#34;` // 索引 Name4 string `gorm:&amp;#34;uniqueIndex&amp;#34;` // 唯一索引</description></item></channel></rss>