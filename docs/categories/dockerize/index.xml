<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dockerize on 老麦的书房</title><link>https://typonotes.com/categories/dockerize/</link><description>Recent content in dockerize on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 09 Feb 2025 14:49:00 +0800</lastBuildDate><atom:link href="https://typonotes.com/categories/dockerize/index.xml" rel="self" type="application/rss+xml"/><item><title>(5) 静态前端网站容器化 - 容器篇 - 自定义 HTTP Server</title><link>https://typonotes.com/posts/2025/02/09/static-sap-dockerize-customize-httpserve/</link><pubDate>Sun, 09 Feb 2025 14:49:00 +0800</pubDate><guid>https://typonotes.com/posts/2025/02/09/static-sap-dockerize-customize-httpserve/</guid><description>(5) 静态前端网站容器化 - 容器篇 - 自定义 HTTP Server 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/02/09/static-sap-dockerize-customize-httpserve/ 众所周知， 我们在容器化 静态网站 的时候为了实现 一次编译， 处处运行 的目标， 在 index.html 中插入了一个变量 __CONFIG__， 在启动的时候进行替换为正式后端的地址。 可以参考 (2) Vue3 / React 静态网站项目容器化 - 实战案例 (3) 静</description></item><item><title>(4) 静态前端容器化 - 单页面应用(SAP) History API Fallback - 刷新 404</title><link>https://typonotes.com/posts/2025/02/09/static-sap-history-api-fallback-issue/</link><pubDate>Sun, 09 Feb 2025 13:45:12 +0800</pubDate><guid>https://typonotes.com/posts/2025/02/09/static-sap-history-api-fallback-issue/</guid><description>(4) 静态前端容器化 - 单页面应用(SAP) History API Fallback - 刷新 404 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/02/09/static-sap-history-api-fallback-issue/ 当单页面（SAP）页面使用了路由之后（例如 React-Router）， 刷新页面就可能造成 404 问题。 问题主要原因是出在 BrowserRouter， 例如 地址 http://localhost:3000/login BrowserRouter 依赖于浏览器的 History API 来管理路由。例</description></item><item><title>(3) 静态前端网站容器化 - 容器篇</title><link>https://typonotes.com/posts/2024/12/16/static-website-container-image/</link><pubDate>Mon, 16 Dec 2024 16:34:29 +0800</pubDate><guid>https://typonotes.com/posts/2024/12/16/static-website-container-image/</guid><description>(3) 静态前端网站容器化 - 容器篇 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2024/12/16/static-website-container-image/ 相关连接 (1) 静态前端网站容器化 - 理论篇 (2) Vue3 / React 静态网站项目容器化 - 实战案例 对于容器的选择， 其实没什么多数说的， 普通的 nginx 就可以了， 或者类似 caddy 这些都行。 如果由于某些权限问题， 选择了 nginxinc/nginx-unprivileged - docker-hub 则需要注意， /usr/share/nginx/html 权限归于 root 启动用</description></item></channel></rss>