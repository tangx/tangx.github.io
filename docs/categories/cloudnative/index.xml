<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloudnative on 老麦的书房</title><link>https://typonotes.com/categories/cloudnative/</link><description>Recent content in cloudnative on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 14 Aug 2023 16:44:54 +0800</lastBuildDate><atom:link href="https://typonotes.com/categories/cloudnative/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 集成 OpenTelemetry 笔记 - Gin Demo</title><link>https://typonotes.com/posts/2023/08/14/golang-opentelemetry-notes/</link><pubDate>Mon, 14 Aug 2023 16:44:54 +0800</pubDate><guid>https://typonotes.com/posts/2023/08/14/golang-opentelemetry-notes/</guid><description>Go 集成 OpenTelemetry 笔记 - Gin Demo 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2023/08/14/golang-opentelemetry-notes/ 为了更方便的查看代码， 建议直接跳转到 Github 仓库： https://github.com/tangx/opentelemetry-gin-demo 使用笔记 1. 使用 Otel-Collect-Contrib 初始化 trace.Provider 这里使用 app -&amp;gt; collector-contrib 进行转发， 应用不直接对后端的存储。 适配性 更高。 collector-contrib 最常见的两种协议 grpc / http(s)。 传入 endpoint 地址进行初始化 Provider， 参考代码 grpcExporter 和 httpExporter</description></item><item><title>kubernetes集群中夺命的5秒DNS延迟</title><link>https://typonotes.com/posts/2023/08/05/k8s-dns-5s-resolv/</link><pubDate>Sat, 05 Aug 2023 01:05:52 +0800</pubDate><guid>https://typonotes.com/posts/2023/08/05/k8s-dns-5s-resolv/</guid><description>kubernetes集群中夺命的5秒DNS延迟 如果在 公众号 文章发现状态为 已更新， 建议点击 查看原文 查看最新内容。 状态: 未更新 原文链接: https://typonotes.com/posts/2023/08/05/k8s-dns-5s-resolv/ kubernetes集群中夺命的5秒DNS延迟 问题原因 相关文章 kubernetes集群中夺命的5秒DNS延迟 破案：Kubernetes/Docke</description></item><item><title>《容器云平台排错一览图》</title><link>https://typonotes.com/posts/2023/06/27/cloudnative-k8s-debug-flow/</link><pubDate>Tue, 27 Jun 2023 10:35:12 +0800</pubDate><guid>https://typonotes.com/posts/2023/06/27/cloudnative-k8s-debug-flow/</guid><description>《容器云平台排错一览图》 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2023/06/27/cloudnative-k8s-debug-flow/ 这张 《容器云平台排错一览图》 不仅 逻辑清晰的为我们提供了 排错思路、流程 和 check list。 而且 通过不同颜色， 非常贴心的为我们提供常用建议。 黑色： 命令 绿色： 直接修复方案 蓝色： 建议 感谢作者。 图片来源： learnk8s.io 绘制/勘误： Spark 点击下载 高</description></item><item><title>云原生: 为开发朋友解答的 100 个问题</title><link>https://typonotes.com/posts/2023/03/22/docker-100-questions-for-developers/</link><pubDate>Wed, 22 Mar 2023 11:01:51 +0800</pubDate><guid>https://typonotes.com/posts/2023/03/22/docker-100-questions-for-developers/</guid><description>云原生: 为开发朋友解答的 100 个问题 如果在 公众号 文章发现状态为 已更新， 建议点击 查看原文 查看最新内容。 状态: 未更新 原文链接: https://typonotes.com/posts/2023/03/22/docker-100-questions-for-developers/ 1. 镜像与服务 1.1. 容器内服务监听地址 0.0.0.0 用 0.0.0.0 是最省事的方法。 如果不嫌弃麻烦， 程序可以自己获取网卡地址 监听本地IP。 通常在开发的时候， 在本地调试喜欢用 127.0.0.1</description></item></channel></rss>