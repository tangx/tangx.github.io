<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>only-one on 老麦的书房</title><link>https://typonotes.com/categories/only-one/</link><description>Recent content in only-one on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 11 Jul 2023 14:58:26 +0800</lastBuildDate><atom:link href="https://typonotes.com/categories/only-one/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Image All in One Policy</title><link>https://typonotes.com/posts/2023/07/11/docker-image-all-in-one-policy/</link><pubDate>Tue, 11 Jul 2023 14:58:26 +0800</pubDate><guid>https://typonotes.com/posts/2023/07/11/docker-image-all-in-one-policy/</guid><description>Docker Image All in One Policy 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2023/07/11/docker-image-all-in-one-policy/ All in One 指的是把所有依赖都制作到同一个镜像中， 比如 app, mysql, redis。 一般来说 不要， 尽量保证一个镜像一个 应用。 解耦合。 可以这么理解 容器重启相当于机器重启 ， 也就是 容器内的服务全部重启。 因此做镜像的时候应该尽量保证服务功能的 单一性 和 简单</description></item><item><title>Duzikai Outsources</title><link>https://typonotes.com/posts/2023/02/20/duzikai-outsources/</link><pubDate>Mon, 20 Feb 2023 18:09:22 +0800</pubDate><guid>https://typonotes.com/posts/2023/02/20/duzikai-outsources/</guid><description>程序员靠谱的接私活平台 原文链接: https://typonotes.com/posts/2023/02/20/duzikai-outsources/ 先说说我对接私活的看法 关于程序员接私活， 不同的人有不同的看法。 增加收入的方法有两种 单价不变的情况下， 增加工作时间。 俗称加班。 工作时间不变的情况下， 增加单价。 俗称涨薪。 就我个人而言， 这个最好只是一个 副业。 接私活， 在我看来就是 给钱的加班， 说起来多多少</description></item><item><title>《别像弱智一样提问》 300 fork 700 star - 没想到大家都讨厌巨婴提问</title><link>https://typonotes.com/posts/2023/01/28/stop-ask-questions-the-stupid-ways/</link><pubDate>Sat, 28 Jan 2023 21:13:28 +0800</pubDate><guid>https://typonotes.com/posts/2023/01/28/stop-ask-questions-the-stupid-ways/</guid><description>《别像弱智一样提问》 300 fork 700 star - 没想到大家都讨厌巨婴提问 原文链接: https://tangx.in/posts/2023/01/28/stop-ask-questions-the-stupid-ways/ 《Stop-Ask-Questions-The-Stupid-Ways》 这是我 6 年前被同事折磨的不行的时候创建的一个发泄仓库， 没想到竟然得到了这么多朋友的认可。 6 年间没有做过任何推广， 竟然得到了接近 300 fork 700 star Github 地址:</description></item></channel></rss>