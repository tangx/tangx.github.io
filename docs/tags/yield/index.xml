<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yield on 老麦的书房</title><link>https://typonotes.com/tags/yield/</link><description>Recent content in yield on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 22 May 2025 17:08:43 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/yield/index.xml" rel="self" type="application/rss+xml"/><item><title>Go1.23 Iterators 迭代器</title><link>https://typonotes.com/posts/2025/05/22/go1.23-iterators/</link><pubDate>Thu, 22 May 2025 17:08:43 +0800</pubDate><guid>https://typonotes.com/posts/2025/05/22/go1.23-iterators/</guid><description>Go1.23 Iterators 迭代器 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/05/22/go1.23-iterators/ 在 Go1.23 新引入了一个标准包 迭代器 Iterator 。 可以返回一个 可迭代对象 - 函数， 该对象 接受一个 回调函数 - yield 。 标准包 iter 中包含以下两个类型 Seq, Seq2。 二者都返回了一个 生成器函数 yield function 1 2 3 4 type ( Seq[V any] func(yield func(V) bool) Seq2[K, V any] func(yield func(K, V) bool) ) Seq2 的命名方式看起来很奇怪， 感觉不</description></item></channel></rss>