<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>container on 老麦的书房</title><link>https://tangx.in/tags/container/</link><description>Recent content in container on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 06 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tangx.in/tags/container/index.xml" rel="self" type="application/rss+xml"/><item><title>Dockerfile 中 ARG 的使用与其的作用域探究</title><link>https://tangx.in/posts/2020/11/06/dockerfiles-args-scope/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/11/06/dockerfiles-args-scope/</guid><description>Dockerfile 中 ARG 的使用与其的作用域探究 使用 ARG 可以有效的复用 Dockerfile。 每次镜像更新，只需要动态的在 build 命令中传入新的参数值即可。 0x01 结论 在第一个 FROM 之前的所有 ARG , 在所有 FROM 中生效, 仅在 FROM 中生效 在 FROM 后的 ARG, 仅在当前 FROM 作用域生效。 即尽在当前 阶段 (stage) 生效 对照组解析 在随后的 Dockerfile 中, 只定义了一个变量 image ,</description></item></channel></rss>