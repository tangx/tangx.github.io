<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vue3 on 老麦的书房</title><link>https://tangx.in/tags/vue3/</link><description>Recent content in vue3 on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 10 Jan 2023 10:28:03 +0800</lastBuildDate><atom:link href="https://tangx.in/tags/vue3/index.xml" rel="self" type="application/rss+xml"/><item><title>开发 k8s 管理平台 - k8sailor 07. (前端) 使用 vite 初始化 vue3 项目</title><link>https://tangx.in/posts/books/k8sailor/chapter02/07-initial-vue3-vite2/</link><pubDate>Tue, 10 Jan 2023 10:28:03 +0800</pubDate><guid>https://tangx.in/posts/books/k8sailor/chapter02/07-initial-vue3-vite2/</guid><description>开发 k8s 管理平台 - k8sailor 07. (前端) 使用 vite 初始化 vue 项目 原文地址: https://tangx.in/posts/books/k8sailor/chapter02/07-initial-vue3-vite2/ 安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 初始化项目 yarn create vite webapp --template vue-ts cd webapp ## 安装依赖 yarn ## 启动查看 vue3 是否正常 yarn dev ## 安装 less 支持， 以后写样式用 yarn add less 清理环境 删除 /webapp/src/components 下的 HelloWorld.vue。 并新建一个 Deployment.vue。 这里使</description></item><item><title>开发 k8s 管理平台 - k8sailor 10. (前端) 使用 vue-router 进行路由管理</title><link>https://tangx.in/posts/books/k8sailor/chapter02/10-vue-router-and-less/</link><pubDate>Tue, 10 Jan 2023 10:28:03 +0800</pubDate><guid>https://tangx.in/posts/books/k8sailor/chapter02/10-vue-router-and-less/</guid><description>开发 k8s 管理平台 - k8sailor 10. (前端) 使用 vue-router 进行路由管理 原文地址: https://tangx.in/posts/books/k8sailor/chapter02/10-vue-router-and-less/ tag: https://github.com/tangx/k8sailor/tree/feat/10-vue-router-and-less 使用 vue-router 路由管理 安装 vue-router 支持参考 https://tangx.in/2021/09/28/vue3-vue-router/ 将默认的 /webapp/src/App.vue 作为最基本的入口， 除了引入 Index.vue 文件模块，不进行其他操作， 保持整洁。 其行为类似 golang 中的 main.go。 创建 /webapp/src/components/Index.vue 模块作为 index 入口文件， 也是主要的布局页面。 路由信息(router-link) 将</description></item><item><title>开发 k8s 管理平台 - k8sailor 14. 一些前后端代码优化</title><link>https://tangx.in/posts/books/k8sailor/chapter02/14-some-optimize/</link><pubDate>Tue, 10 Jan 2023 10:28:03 +0800</pubDate><guid>https://tangx.in/posts/books/k8sailor/chapter02/14-some-optimize/</guid><description>开发 k8s 管理平台 - k8sailor 14. 一些前后端代码优化 原文地址: https://tangx.in/posts/books/k8sailor/chapter02/14-some-optimize/ tag: https://github.com/tangx/k8sailor/tree/feat/14-some-optimize 将 LabelSelector 转换为 Selector client-go 提供了一个方法， 可以将 Resource 中的 LabelSelector 转换为 Selector, 并且 Selector 结构提供了一些常用的方法。 如 String 1 2 3 4 5 6 7 8 9 import ( metav1 &amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34; ) func() { selector, _ := metav1.LabelSelectorAsSelector(dep.Spec.Selector) x := selector.String() fmt.Println(x) }() 因此在使用 GetXXXByLabels 时， api 层 可以考虑 接收 map[string]string 类型的参数。 而在 biz 层应该将 不同类型 的参数 统一 转换为格式</description></item><item><title>easy vue3 - 00 使用 vite 初始化 vue3 项目</title><link>https://tangx.in/posts/2022/03/22/easy-vue3-00-initial-a-vue3-vite-project/</link><pubDate>Tue, 22 Mar 2022 07:29:16 +0800</pubDate><guid>https://tangx.in/posts/2022/03/22/easy-vue3-00-initial-a-vue3-vite-project/</guid><description/></item><item><title>easy vue3 - 01 模版语法</title><link>https://tangx.in/posts/2022/03/22/easy-vue3-01-template-syntax/</link><pubDate>Tue, 22 Mar 2022 07:19:34 +0800</pubDate><guid>https://tangx.in/posts/2022/03/22/easy-vue3-01-template-syntax/</guid><description>在 vue 中渲染变量通常有两种方式 插值语法， 又叫 胡子语法 ， 使用 {{ xxx }} 方式在 标签体 渲染变量 1 &amp;lt;h3&amp;gt;插值语法: {{ name }}&amp;lt;/h3&amp;gt; 指令语法 v-bind:attr=&amp;quot;xxxx&amp;quot;, v-bind 可以缩写为 冒号 :， attr 是 标签属性 名称； xxx 是属性标签值， 且 xxx 是 js 表达式 1 2 3 4 5 6 &amp;lt;h3&amp;gt;指令语法&amp;lt;/h3&amp;gt; &amp;lt;a :href=&amp;#34;url&amp;#34;&amp;gt; 百度一下 ( : ) &amp;lt;/a&amp;gt;</description></item></channel></rss>