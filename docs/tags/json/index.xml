<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>json on 老麦的书房</title><link>https://typonotes.com/tags/json/</link><description>Recent content in json on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 09 Jan 2024 11:15:10 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/json/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 中 JSON/YAML 使用 tag inline 解析内嵌字段</title><link>https://typonotes.com/posts/2024/01/09/golang-tag-inline/</link><pubDate>Tue, 09 Jan 2024 11:15:10 +0800</pubDate><guid>https://typonotes.com/posts/2024/01/09/golang-tag-inline/</guid><description>Golang 中 JSON/YAML 使用 tag inline 解析内嵌字段 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2024/01/09/golang-tag-inline/ 这是一片错误笔记， 没什么高大上的东西。 简单记录一下在 Go 中使用 json 和 yaml 在解析字符串的时候没有太注意的一个点。 以 Json 为例， 通常我们在 struct结构 与 Json结构 的时候是 一一对应 的。 以下几种名字都是我自己取的， 不保证正确</description></item></channel></rss>