<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>workspace on 老麦的书房</title><link>https://typonotes.com/tags/workspace/</link><description>Recent content in workspace on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 May 2025 16:16:27 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/workspace/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 1.24 - os.Root 锁定工作目录</title><link>https://typonotes.com/posts/2025/05/16/os-root-in-go124/</link><pubDate>Fri, 16 May 2025 16:16:27 +0800</pubDate><guid>https://typonotes.com/posts/2025/05/16/os-root-in-go124/</guid><description>Go 1.24 - os.Root 锁定工作目录 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2025/05/16/os-root-in-go124/ os.Root 可以锁定工作目录。 使用户无法打开目录外的文件，例如 ../../../etc/passwd 。 可以算一种 安全保护 最重要的是 强制约束用户， 限制用户行为， 检查计划外的使用逻辑 。 免得和煞笔瞎掰扯， 浪费时间。 使用 root, _ := os.OpenRoot(basedir) 锁定工作目录 以后的所有操作都要基于 root.Xzzzz() 展开 root.OpenFile(path) 在</description></item></channel></rss>