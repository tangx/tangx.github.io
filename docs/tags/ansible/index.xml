<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ansible on 老麦的书房</title><link>https://maicode.cc/tags/ansible/</link><description>Recent content in ansible on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 09 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://maicode.cc/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>ansible 2.3.0.0 条件判断</title><link>https://maicode.cc/posts/2017/05/09/ansible-2.3.0.0-condition-conditional-examples/</link><pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2017/05/09/ansible-2.3.0.0-condition-conditional-examples/</guid><description>ansible 2.3.0.0 条件判断 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134</description></item><item><title>ansible synchronize 同步文件夹</title><link>https://maicode.cc/posts/2017/04/12/ansible-copy-directories-to-remote-hosts-synchronize_module/</link><pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2017/04/12/ansible-copy-directories-to-remote-hosts-synchronize_module/</guid><description>ansible synchronize 同步文件夹 使用 ansible synchronize_module 可以控制机和目标机之间同步目录 1 2 3 4 cat /root/ansible_copy/hosts [backup] 10.1.1.1 serverid=1001 ansible_ssh_user=backup_user ansible_ssh_port=22 通过 mode 控制同步方向 mode=push 默认值。 从『控制机』到『目标机』 mode=pull 从『目标机』到『控制机』 推送 push 1 2 3 ansible -i /root/ansible_copy/hosts backup -m synchronize -a &amp;#39;src=https://maicode.cc/tmp/svr_01/backup/ dest=/tmp/svr_02/backup/&amp;#39; ansible -i /root/ansible_copy/hosts backup -m synchronize -a &amp;#39;mode=push src=https://maicode.cc/tmp/svr_01/backup/ dest=/tmp/svr_02/backup/&amp;#39; 拉取 pull 1 ansible -i /root/ansible_copy/hosts backup -m synchronize -a &amp;#39;mode=pull src=https://maicode.cc/tmp/svr_01/backup/ dest=/tmp/svr_02/backup/&amp;#39; delegate_to 授权 需要注意的是，使用 delegate_to 授权机进行 synchronize 。需要保证授</description></item><item><title>ansible playbook 注意事项 02</title><link>https://maicode.cc/posts/2017/01/06/ansible-playbook-tips-02/</link><pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2017/01/06/ansible-playbook-tips-02/</guid><description>ansible playbook 注意事项 02 参考 defaults/main.yml 1 2 3 4 5 6 7 8 9 10 11 12 # 关于缩进 # 在 yaml 语法中, `-` 表示指代的是一个列表格式, 在字典的 key 缩进的时候不能算在内. # # -------------------------------- # 如下的缩进, # server 和 file_name 位于相同层级 # -------------------------------- # - server: # file_name: site3 # listen: 10101 # server_name: nginx_playbook # root: &amp;#34;/tmp/site3&amp;#34; 字典写法 以下三种写法等价 参考 main.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # 01 单行写法</description></item><item><title>ansible playbook 注意事项 01</title><link>https://maicode.cc/posts/2016/12/30/ansible-playbook-tips-01/</link><pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2016/12/30/ansible-playbook-tips-01/</guid><description>ansible playbook 注意事项 01 notify 触发条件 不能在没有变更系统状态的条件下触发 notify 。 即，此处不能省略 template 模块 # tasks - name: Configure ntp file template: src=ntp.conf.j2 dest=/etc/ntp.conf notify: restart ntpd tags: ntp 变量文件 通过 vars_files 指定变量文件位置 - name: install MySQL57 hosts: mysql-server remote_user: root vars_files: - vars/dbserver.yml roles: - db 模块提示 在编写 playbook 的时候，遇到不知道或不清楚的模块时。可以使用 command: sys_command_bin args。 如果 ansible 有合适的模块会在 play 运行的输出</description></item><item><title>ansible 命令及示例</title><link>https://maicode.cc/posts/2016/12/16/ansible-command-usage/</link><pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2016/12/16/ansible-command-usage/</guid><description>ansible 命令帮助文档 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133</description></item><item><title>ansible 入门</title><link>https://maicode.cc/posts/2016/11/10/how-to-usage-ansible/</link><pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2016/11/10/how-to-usage-ansible/</guid><description>ansible 指南 本地执行 https://cloud.tencent.com/developer/ask/28078 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 方法1: - name: check out a git repository local_action: module: git repo: git://foosball.example.org/path/to/repo.git dest: /local/path --- # 方法2: - name: check out a git repository local_action: git args: repo: git://foosball.example.org/path/to/repo.git dest: /local/path 判断目标状态 / 判断目标是否存在 1 2 3 4 5 6 7 8 9 10 - stat: path=/path/to/something register: p # 判断目标是否为文件夹 - debug: msg=&amp;#34;Path exists and is a directory&amp;#34; when: p.stat.isdir is defined and p.stat.isdir # 判断目标是否为文件夹 - debug: msg=&amp;#34;Path exists&amp;#34; when: p.stat.exists</description></item></channel></rss>