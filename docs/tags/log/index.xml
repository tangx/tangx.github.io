<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>log on 老麦的书房</title><link>https://typonotes.com/tags/log/</link><description>Recent content in log on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 21 Nov 2024 11:30:43 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/log/index.xml" rel="self" type="application/rss+xml"/><item><title>Python 日志库: Loguru</title><link>https://typonotes.com/posts/2024/11/21/python-loguru/</link><pubDate>Thu, 21 Nov 2024 11:30:43 +0800</pubDate><guid>https://typonotes.com/posts/2024/11/21/python-loguru/</guid><description>Python 日志库: Loguru 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2024/11/21/python-loguru/ loguru 是一款常用的 python 日志库。 https://loguru.readthedocs.io/en/stable/overview.html 注意: loguru 没有 fatal， 而是 critical 安装 1 pip install loguru 基础使用 1 2 3 4 5 6 7 8 9 10 from loguru import logging as log ## 设置格式 logger.add(&amp;#34;file.log&amp;#34;, format=&amp;#34;{time} {level} {message}&amp;#34;, level=&amp;#34;INFO&amp;#34;) ## 设置 level logger.level(&amp;#34;ERROR&amp;#34;) # 注意， 不支持小写 logger.info(&amp;#34;Hello, World!&amp;#34;) logger.critical(&amp;#34;This is a critical message!&amp;#34;) 装饰器用法 1 2 3 4 @logger.catch def test_logger(x: int): log.info(&amp;#34;This is a test logger function!&amp;#34;) return 10 / x 绑定额外参</description></item><item><title>Aliyun Logtail 收集 JSON 格式日志</title><link>https://typonotes.com/posts/2023/05/08/aliyun-logtail-collect-json-format-logs/</link><pubDate>Mon, 08 May 2023 16:54:22 +0800</pubDate><guid>https://typonotes.com/posts/2023/05/08/aliyun-logtail-collect-json-format-logs/</guid><description>Aliyun Logtail 收集 JSON 格式日志 如果在 公众号 文章发现状态为 已更新， 建议点击 查看原文 查看最新内容。 状态: 未更新 原文链接: https://typonotes.com/posts/2023/05/08/aliyun-logtail-collect-json-format-logs/ 本文针对性比较强， 仅仅适用于 Aliyun Logtail 配置。 在使用 Aliyun K8S 集群后， 可以安装 Logtail 服务进行日志收集。 默认文档中， 阿里云官方提供的是 正则模式 的采集方式 采集 Nginx Ingress Controller 日志 。 将日志改成 JSON 格式之后， 可以</description></item><item><title>filebeat将多行日志视作一样的参数配置</title><link>https://typonotes.com/posts/2017/11/11/filebeat-multi-line/</link><pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><guid>https://typonotes.com/posts/2017/11/11/filebeat-multi-line/</guid><description>filebeat 将多行日志视作一样的参数配置 在 filebeat 格式化日志是，可以配置 pattern 将多行日志合并成一样。 在配置文件 filebeat.yml 中，协同完成这个功能的参数有 4 个。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # The regexp Pattern that has to be matched. # 设置行的匹配字段 multiline.pattern: &amp;#39;^[[:space:]]|^[[:alpha:]]&amp;#39; # Defines if the pattern set under pattern should be negated or not. Default is false. # 设置符合上面匹配条件的的行，是否应该被合</description></item></channel></rss>