<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vscode on 老麦的书房</title><link>https://tangx.in/tags/vscode/</link><description>Recent content in vscode on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 30 Dec 2022 22:50:10 +0800</lastBuildDate><atom:link href="https://tangx.in/tags/vscode/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 工具命令(02): shfmt 格式化 shell 脚本， vscode 神插件</title><link>https://tangx.in/posts/2022/12/30/vscode-shfmt/</link><pubDate>Fri, 30 Dec 2022 22:50:10 +0800</pubDate><guid>https://tangx.in/posts/2022/12/30/vscode-shfmt/</guid><description>Linux 工具命令(02): shfmt 格式化 shell 脚本， vscode 神插件 如果你用 Linux， 那你一定会遇到各种各样的 shell script（下称 script) 可惜的是， script 并没有一个 强制 约束的格式。 对于分支控制语句， 都有自己的关键字。 条件语句: if (...) then ... else ... fi 循环语句: for ... do ... done 等。 因此 是否使用 {statement} 或者 缩进 并不影响。 当分支语句多，且</description></item><item><title>golang 为 struct 自动添加 tags</title><link>https://tangx.in/posts/2020/12/11/tips-auto-add-tags/</link><pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/12/11/tips-auto-add-tags/</guid><description>golang 为 struct 自动添加 tags vscode 中的 go 0.12.0 版本新加入了一个 auto add tags 的功能。 setting.json 配置如下 1 2 3 4 5 6 &amp;#34;go.addTags&amp;#34;: { &amp;#34;tags&amp;#34;: &amp;#34;yaml,json&amp;#34;, &amp;#34;options&amp;#34;: &amp;#34;yaml=omitempty,yaml=options2,yaml=options3,json=omitempty&amp;#34;, &amp;#34;promptForTags&amp;#34;: false, &amp;#34;transform&amp;#34;: &amp;#34;snakecase&amp;#34; }, 在 example.go 中创建一个 struct 1 2 3 4 5 type Person struct { Name string Age int Gender string } 将光标移动到 struct 结构体中， 使用 command + shift + p 选择 go: add tag for struct 即可 result 1 2 3 4 5 type Person struct { Name string `yaml:&amp;#34;name,omitempty,options2,options3&amp;#34; json:&amp;#34;name,omitempty&amp;#34;` Age int `yaml:&amp;#34;age,omitempty,options2,options3&amp;#34; json:&amp;#34;age,omitempty&amp;#34;` Gender string `yaml:&amp;#34;gender,omitempty,options2,options3&amp;#34; json:&amp;#34;gender,omitempty&amp;#34;` }</description></item></channel></rss>