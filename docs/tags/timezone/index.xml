<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>timezone on 一壶酒一溪云</title><link>https://typonotes.com/tags/timezone/</link><description>Recent content in timezone on 一壶酒一溪云</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 09 Jan 2023 23:00:30 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/timezone/index.xml" rel="self" type="application/rss+xml"/><item><title>这些关于 Golang timezone 时区的坑， 我已经帮你踩过了</title><link>https://typonotes.com/posts/2023/01/09/golang-timezone-issue/</link><pubDate>Mon, 09 Jan 2023 23:00:30 +0800</pubDate><guid>https://typonotes.com/posts/2023/01/09/golang-timezone-issue/</guid><description>这些关于 Golang timezone 时区的坑， 我已经帮你踩过了 原文链接: https://tangx.in/posts/2023/01/09/golang-timezone-issue/ Golang 中一些不太注意的时区问题 1. time/tzdata 库 Golang 内置的一个时区文件。 可以在程序中任意位置被导入。 导入后， 如果程序 找不到本地 时区文件， 就会使用该库的数据。 本地 指的是 运行环境， 可能是实际的服务器， 也可能是容器。 通常， 应该在 main.go 中被导入。 如果是 库代码 则</description></item><item><title>在 Docker 容器中设置时区原来这么简单</title><link>https://typonotes.com/posts/2022/12/21/docker-container-set-timezone/</link><pubDate>Wed, 21 Dec 2022 20:49:12 +0800</pubDate><guid>https://typonotes.com/posts/2022/12/21/docker-container-set-timezone/</guid><description>Docker 容器中设置时区 在 linux 中， 通过 /etc/timezone 这个文件设置。 可以通过如下命令 持久化 时区设置， 其中 Asia/Shanghai 是我们需要的时区。 1 cp -a /usr/share/zoneinfo/Asia/Shanghai /etc/timezone 容器中设置时区一直是独立于宿主机的。 可以通过挂载 /etc/timezone 的方式保持与宿主机时间一致。 1 docker run --rm -it -v /etc/timezone:/etc/timezone debian bash 这种方法只适合 本地的、简单的、临时的 容器。 容器有一个很重要的特点， 就是 一处</description></item></channel></rss>