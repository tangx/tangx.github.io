<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reflect on 老麦的书房</title><link>https://typonotes.com/tags/reflect/</link><description>Recent content in reflect on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 18 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://typonotes.com/tags/reflect/index.xml" rel="self" type="application/rss+xml"/><item><title>golang 使用反射绑定 cobra flag 参数</title><link>https://typonotes.com/posts/2021/09/18/golang-cobra-flag-binder/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://typonotes.com/posts/2021/09/18/golang-cobra-flag-binder/</guid><description>golang 使用反射绑定 cobra flag 参数 cobra https://github.com/spf13/cobra 是 golang 中一个非常好用的 命令 开发库。 但是绑定 flag 参数的时候略微有点繁琐， 不但有多少个参数就需要写多少行绑定代码， 而且参数定义和描述也是分开的， 非常的不直观。 1 2 3 4 5 6 func init() { rootCmd.Flags().StringVarP(&amp;amp;stu.Name, &amp;#34;name&amp;#34;, &amp;#34;&amp;#34;, &amp;#34;zhangsanfeng&amp;#34;, &amp;#34;student name&amp;#34;) rootCmd.Flags().Int64VarP(&amp;amp;stu.Age, &amp;#34;age&amp;#34;, &amp;#34;a&amp;#34;, 18, &amp;#34;student age&amp;#34;) // ... } 想着吧， 反正都要了解 golang reflect 反射, 不如就用 反射 实现一个绑定支</description></item></channel></rss>