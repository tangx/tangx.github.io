<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>layout on 老麦的书房</title><link>https://typonotes.com/tags/layout/</link><description>Recent content in layout on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 13 Feb 2023 12:41:36 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/layout/index.xml" rel="self" type="application/rss+xml"/><item><title>DevopsCamp 第 2 期作业: 《cobra - 04 Go 项目的目录结构》</title><link>https://typonotes.com/posts/2023/02/13/devopscamp-cobra-05-layout/</link><pubDate>Mon, 13 Feb 2023 12:41:36 +0800</pubDate><guid>https://typonotes.com/posts/2023/02/13/devopscamp-cobra-05-layout/</guid><description>DevopsCamp 第 2 期作业: 《cobra - 04 Go 项目的目录结构》 原文链接: https://typonotes.com/posts/2023/02/13/devopscamp-cobra-05-layout/ Go 项目的目录结构 Go 项目的目录结构， 通常都会参考该项目 Go语言规范/项目结构 - Github 。 这是一个社区规范， 遵守这个规范， 大家都会很轻松。 但并不是严格的 Go 语言标准， 实际操作中各个公司可能会有自己的标准。 另外， 在上述的 Github 仓库中可以看</description></item><item><title>DevopsCamp 第 2 期作业: 《cobra - 05 Cobra 的子命令》 简单说下 cobra 命令树和 gin 路由树的实现差异</title><link>https://typonotes.com/posts/2023/02/14/devopscamp-cobra-05-subcommand/</link><pubDate>Mon, 13 Feb 2023 12:41:36 +0800</pubDate><guid>https://typonotes.com/posts/2023/02/14/devopscamp-cobra-05-subcommand/</guid><description>DevopsCamp 第 2 期作业: 《cobra - 05 Cobra 的子命令》 简单说下 cobra 命令树和 gin 路由树的实现差异 原文链接: https://typonotes.com/posts/2023/02/14/devopscamp-cobra-05-subcommand/ cobra 的子命令 在 cobra 中， 每个 命令 都是独立的。 通过 parent.AddCommand(children) 的形式进行串连。 1 2 3 4 5 6 7 var root = &amp;amp;cobra.Command{} var child = &amp;amp;cobra.Command{} func init() { root.AddCommand(child) } 没了， 应用上就这么多。 cobra 命令树 如果你用过 gin 的路由树的话， 可能会对 cobra 的命令树实现更为深刻。 删</description></item></channel></rss>