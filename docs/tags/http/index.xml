<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>http on 老麦的书房</title><link>https://typonotes.com/tags/http/</link><description>Recent content in http on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 25 Jan 2024 10:35:44 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>几种封装 HTTP Authorization 的分装方式</title><link>https://typonotes.com/posts/2024/01/25/authz-in-http-request/</link><pubDate>Thu, 25 Jan 2024 10:35:44 +0800</pubDate><guid>https://typonotes.com/posts/2024/01/25/authz-in-http-request/</guid><description>几种封装 HTTP Authorization 的分装方式 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2024/01/25/authz-in-http-request/ 大家都知道， 在做 HTTP 请求的时候， 通常需要提供 账号名和密码， 例如 1 $ curl -u username:password http://api.example.com 其实， 这种就是 HTTP Authentication 中的 Basic 模式(Schema) 翻译一下 首先将账号密码使用 冒号: 链接 随后进行 base64 编码 最后放在 Header 的 Authorization 中。 1 2 $ val=base64(&amp;#34;username:password&amp;#34;) $ curl -H &amp;#34;Authorization: Basic ${username:password} http://api.example.com 除了 Basic 之外</description></item></channel></rss>