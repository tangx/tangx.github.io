<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>qos on 老麦的书房</title><link>https://typonotes.com/tags/qos/</link><description>Recent content in qos on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 03 Jan 2023 18:15:50 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/qos/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes 不同的升级策略是如何影响服务质量 QoS 的</title><link>https://typonotes.com/posts/2023/01/03/kubernetes-upgrade-strategy-and-qos/</link><pubDate>Tue, 03 Jan 2023 18:15:50 +0800</pubDate><guid>https://typonotes.com/posts/2023/01/03/kubernetes-upgrade-strategy-and-qos/</guid><description>Kubernetes 不同的升级策略是如何影响服务质量 QoS 的 Deployments#Strategy - Kubernetes 无论采取哪种升级方式, 都应该在容器中使用 probe , 降低业务抖动 Pod 升级策略 .spec.strategy.type 有两种方式可选: RollingUpdate : 滚动升级. .spec.strategy.rollingUpdate.maxUnavailable 最大不可用 , 默认 25% , 即升级期间, 总容器数量为 100%。 循环 删旧扩新 .spec.strategy.rollingUpdate.maxSurge 最大弹性, 默认 30% , 即升级期间, 总容器数量不超过 130%。 循环 扩新删旧</description></item></channel></rss>