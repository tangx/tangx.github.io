<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>package on 老麦的书房</title><link>https://typonotes.com/tags/package/</link><description>Recent content in package on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 29 Nov 2024 19:21:45 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/package/index.xml" rel="self" type="application/rss+xml"/><item><title>Python: 关于 Package 和 Module 快速入门</title><link>https://typonotes.com/posts/2024/11/29/python-package-module-quick-start/</link><pubDate>Fri, 29 Nov 2024 19:21:45 +0800</pubDate><guid>https://typonotes.com/posts/2024/11/29/python-package-module-quick-start/</guid><description>Python: 关于 Package 和 Module 快速入门 建议点击 查看原文 查看最新内容。 原文链接: https://typonotes.com/posts/2024/11/29/python-package-module-quick-start/ 什么是 包 (Package) 如果一个目录中有 __init__.py ， 那这个目录就是 包 Package 什么是 模块 (Module) xxx.py 文件就是模块 怎么引用自定义包 把 包路径 使用 sys.path.append(xxx) 添加后， 就可以使用 1 2 3 4 5 6 7 8 9 10 11 # import {Package} from x.Package import Module print(f&amp;#34;Module.Attribute&amp;#34;) from x.Package.Module import Attribute print(f&amp;#34;{Attribute}&amp;#34;) # 别名 from x.Package.Module import Attribute as attr print(f&amp;#34;{attr}&amp;#34;) 不能使用 连续的 . 结构 1 2 import x.Package</description></item></channel></rss>