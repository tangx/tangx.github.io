<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tidb on 老麦的书房</title><link>https://maicode.cc/tags/tidb/</link><description>Recent content in tidb on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 10 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maicode.cc/tags/tidb/index.xml" rel="self" type="application/rss+xml"/><item><title>tidb 备份恢复与迁移</title><link>https://maicode.cc/posts/2020/10/10/tidb-migrate/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2020/10/10/tidb-migrate/</guid><description>tidb 备份恢复与迁移 https://pingcap.com/docs-cn/v2.1/reference/tools/download/ 1 wget https://download.pingcap.org/tidb-enterprise-tools-latest-linux-amd64.tar.gz 使用 mydumper 从 mysql/tidb 备份数据 https://pingcap.com/docs-cn/v2.1/how-to/maintain/backup-and-restore/ 使用 mydumper 备份 mydumper: https://github.com/maxbube/mydumper/releases 1 mydumper -h 127.0.0.1 -P 4000 -u root -t 32 -F 64 -B test -T t1,t2 --skip-tz-utc -o ./var/test 我们使用 -B test 表明是对 test 这个 database 操作，然后用 -T t1,t2 表明只导出 t1，t2 两张表。 -t 32 表明使用 32 个线程去导出数据。-F 64 是将实际的 table 切分成多大的 chunk，这里就是 64MB 一个 chunk。 --skip-tz-utc 添加这个参</description></item><item><title>TiDB 2.1 备份恢复与迁移</title><link>https://maicode.cc/posts/2020/04/23/tidb-backup-migrate/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://maicode.cc/posts/2020/04/23/tidb-backup-migrate/</guid><description>TiDB 2.1 备份恢复与迁移 备份 https://pingcap.com/docs-cn/v2.1/how-to/maintain/backup-and-restore/ 使用 mydumper 备份 mydumper: https://github.com/maxbube/mydumper/releases 1 mydumper -h 127.0.0.1 -P 4000 -u root -t 32 -F 64 -B test -T t1,t2 --skip-tz-utc -o ./var/test 我们使用 -B test 表明是对 test 这个 database 操作，然后用 -T t1,t2 表明只导出 t1，t2 两张表。 -t 32 表明使用 32 个线程去导出数据。-F 64 是将实际的 table 切分成多大的 chunk，这里就是 64MB 一个 chunk。 --skip-tz-utc 添加这个参数忽略掉 TiDB 与导数据的</description></item></channel></rss>