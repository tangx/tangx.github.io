<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ingress on 老麦的书房</title><link>https://typonotes.com/tags/ingress/</link><description>Recent content in ingress on 老麦的书房</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 28 Mar 2023 15:49:09 +0800</lastBuildDate><atom:link href="https://typonotes.com/tags/ingress/index.xml" rel="self" type="application/rss+xml"/><item><title>K8s Ingress Questions</title><link>https://typonotes.com/posts/2023/03/28/k8s-ingress-questions/</link><pubDate>Tue, 28 Mar 2023 15:49:09 +0800</pubDate><guid>https://typonotes.com/posts/2023/03/28/k8s-ingress-questions/</guid><description>K8s Ingress Questions 如果在 公众号 文章发现状态为 已更新， 建议点击 查看原文 查看最新内容。 状态: 未更新 原文链接: https://typonotes.com/posts/2023/03/28/k8s-ingress-questions/ 1. 常说的 Ingress 值的是什么。 首先拉平一个认识。 常说的 Ingress 是 Ingress Rules。 但 Ingerss 实际上是由 Ingress Rules 和 Ingress Controller 的组合而成的。 在使用上， K8S 通过 Rules 的管理， 隐藏 Controller。 目前 k8s 官方维护的 控制器（Cont</description></item><item><title>开发 k8s 管理平台 - k8sailor 20. 为 Deployment 创建 Ingress</title><link>https://typonotes.com/posts/books/k8sailor/chapter02/20-create-ingress/</link><pubDate>Tue, 10 Jan 2023 10:28:03 +0800</pubDate><guid>https://typonotes.com/posts/books/k8sailor/chapter02/20-create-ingress/</guid><description>开发 k8s 管理平台 - k8sailor 20. 为 Deployment 创建 Ingress 原文地址: https://tangx.in/posts/books/k8sailor/chapter02/01-install-k3s-cluster/ tag: https://github.com/tangx/k8sailor/tree/feat/20-create-ingress k8s ingress https://kubernetes.io/zh/docs/concepts/services-networking/ingress/ 1 2 3 4 # Create an ingress with a default backend kubectl create ingress ingdefault --class=default \ --default-backend=defaultsvc:http \ --rule=&amp;#34;foo.com/*=svc:8080,tls=secret1&amp;#34; --dry-run -o yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 apiVersion: networking.k8s.io/v1 kind: Ingress metadata: creationTimestamp: null name: ingdefault spec: defaultBackend: service: name: defaultsvc port: name: http ingressClassName: default rules: - host: foo.com http: paths: - backend: service: name: svc port: number: 8080 path: / pathType: Prefix # 匹配方式 tls: - hosts: - foo.com secretName: secret1 status: loadBalancer: {} 路径类型 Ingress 中的每个</description></item></channel></rss>