<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>s3 on 一壶酒一溪云</title><link>https://tangx.in/tags/s3/</link><description>Recent content in s3 on 一壶酒一溪云</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 13 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tangx.in/tags/s3/index.xml" rel="self" type="application/rss+xml"/><item><title>minio 使用 lego 实现 https</title><link>https://tangx.in/posts/2020/11/13/minio-with-lego/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/11/13/minio-with-lego/</guid><description>minio 使用 lego 实现 https 访问 minio 提供两种 https 访问。 推荐 在启动过程中使用 certs 证书。 此种方法最后只提供 https 访问。 使用 https 代理。 nginx proxy caddy proxy 1 2 3 4 5 6 7 8 9 10 $ tree . -L 3 . ├── certs │ ├── CAs │ ├── private.key │ └── public.crt ├── data ├── entrypoint.sh ├── minio 1 2 3 4 5 6 7 8 9 #!/bin/bash # entrypoint.sh cd $(dirname $0) DIR=$(pwd) export MINIO_ACCESS_KEY=minio export MINIO_SECRET_KEY=miniostorage ./minio --certs-dir ${DIR}/certs server ${DIR}/data troubleshoot the ECDSA curve &amp;lsquo;P-384&amp;rsquo; is not supported ERROR Unable to load the</description></item><item><title>使用 s3cmd 为 cephfs 设置 policy</title><link>https://tangx.in/posts/2020/11/12/s3cmd-policy-for-cephfs/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/11/12/s3cmd-policy-for-cephfs/</guid><description>使用 s3cmd 为 cephfs rgw 设置 policy cephfs rgw 模式完全兼容 aws 的 s3v4 协议。 因此对 cephfs rgw 的日常管理， 可以使用 s3cmd 命令操作。 策略 配置策略 全局读策略 1 2 3 4 5 6 7 8 9 10 # cat public-read-policy.json { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [{ &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Principal&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:GetObject&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; }] } 设置策略 1 $ s3cmd setpolicy public-read-policy.json s3://example-bucket 查看 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 $ s3cmd info s3://example-bucket s3://example-bucket/ (bucket): Location: default Payer: BucketOwner Expiration Rule: none policy: { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [{ &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Principal&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:GetObject&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34;</description></item><item><title>harbor 使用 s3v4 兼容模式对象存储保存数据</title><link>https://tangx.in/posts/2020/04/26/harbor-with-s3-compatible-storage/</link><pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/04/26/harbor-with-s3-compatible-storage/</guid><description>harbor使用 s3v4 兼容模式的对象存储数据 harbor v2.0.0 测试通过 qingcloud qingstor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # The default data volume data_volume: /data # Harbor Storage settings by default is using /data dir on local filesystem # Uncomment storage_service setting If you want to using external storage # storage_service: # # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore # # of registry&amp;#39;s and chart repository&amp;#39;s containers. This is usually needed when the user hosts a internal storage with self signed certificate. # ca_bundle: #</description></item><item><title>gitlab 使用青云 qingstor 对象存储作为存储</title><link>https://tangx.in/posts/2020/04/23/gitlab-storage-with-qingstor/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://tangx.in/posts/2020/04/23/gitlab-storage-with-qingstor/</guid><description>gitlab 使用青云 qingstor 对象存储作为存储 使用 s3 compatible 模式， 腾讯云、阿里云、华为云、青云 都可以实现。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # https://docs.gitlab.com/ce/administration/job_artifacts.html gitlab_rails[&amp;#39;artifacts_enabled&amp;#39;] = true gitlab_rails[&amp;#39;artifacts_object_store_enabled&amp;#39;] = true gitlab_rails[&amp;#39;artifacts_object_store_remote_directory&amp;#39;] = &amp;#34;gitlab-storage-artifacts&amp;#34; gitlab_rails[&amp;#39;artifacts_object_store_connection&amp;#39;] = { # s3v4 compatible mode # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/examples/objectstorage/rails.minio.yaml &amp;#39;provider&amp;#39; =&amp;gt; &amp;#39;AWS&amp;#39;, &amp;#39;region&amp;#39; =&amp;gt; &amp;#39;us-east-1&amp;#39;, &amp;#39;aws_access_key_id&amp;#39; =&amp;gt; &amp;#39;ACID_XXXXXXXXXXXXXXXXX&amp;#39;, &amp;#39;aws_secret_access_key&amp;#39; =&amp;gt; &amp;#39;ACKEY_YYYYYYYYYYYYYYYY&amp;#39;, &amp;#39;aws_signature_version&amp;#39; =&amp;gt; 4, &amp;#39;host&amp;#39; =&amp;gt; &amp;#39;s3.pek3b.qingstor.com&amp;#39;, &amp;#39;endpoint&amp;#39; =&amp;gt; &amp;#34;http://s3.pek3b.qingstor.com&amp;#34;, &amp;#39;path_style&amp;#39; =&amp;gt; true }</description></item></channel></rss>